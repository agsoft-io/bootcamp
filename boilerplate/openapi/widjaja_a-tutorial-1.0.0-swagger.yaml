swagger: '2.0'

# metadata
info:
  version: '1.0.0'
  title: 'tutorial'
  description: 'Sample API.'
  license:
    name: 'MIT'
    url: 'https://tldrlegal.com/license/mit-license'
  contact:
    name: 'Andi Widjaja'
    email: 'andi.widjaja@potensi.net'
tags:
  - name: users
    description: 'Everything about the users'
  - name: files
    description: 'Everything about the files'
security:
  - BasicAuth: [] 

# endpoints
paths: 
  /users/{id}:
    post:
      tags:
        - users
      operationId: addUser
      summary: 'Creates a new user.'
      description: 'Add new user by name.'
      consumes:
        - application/json
      parameters:
        - in: body
          name: username
          description: 'The user to create.'
          schema:
            $ref: 'https://api.swaggerhub.com/domains/widjaja_a/tutorial-domain/1.0.0#/definitions/User'
      responses:
        200:
          description: 'OK.'
          schema:
            $ref: 'https://api.swaggerhub.com/domains/widjaja_a/tutorial-domain/1.0.0#/definitions/User'
    get:
      tags:
        - users
      operationId: getUserById
      summary: 'Return a user by id.'
      description: 'Show user detail for the selected user id.'
      parameters:
        - $ref: 'https://api.swaggerhub.com/domains/widjaja_a/tutorial-domain/1.0.0#/parameters/idParam'
      produces:
        - application/json
      responses:
        200:
          description: 'OK.'
          schema:
            $ref: 'https://api.swaggerhub.com/domains/widjaja_a/tutorial-domain/1.0.0#/definitions/User'
        400:
          description: 'The specified user ID is invalid (e.g. not a number).'
          schema:
            $ref: 'https://api.swaggerhub.com/domains/widjaja_a/tutorial-domain/1.0.0#/definitions/ErrorModel'
        401:
          $ref: 'https://api.swaggerhub.com/domains/widjaja_a/tutorial-domain/1.0.0#/responses/Unauthorized'
#          description: 'Authorization information is missing or invalid.'
        404:
          $ref: 'https://api.swaggerhub.com/domains/widjaja_a/tutorial-domain/1.0.0#/responses/NotFound'
#          description: 'A user with the specified ID was not found.'
  /zip:
    post:
      tags:
        - files
      operationId: loadZipFile
      summary: Uploads a zip file.
      description: 'Upload the selected zip file.'
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: zipfile
          type: file
          description: 'Contents of the ZIP file.'
          x-mimetype: application/zip
      produces:
        - application/json
      responses:
        200:
          description: 'OK.'
  /pdf:
    get:
      tags:
        - files
      operationId: getPDFFile
      summary: 'Returns the report in the PDF format.'
      description: 'get the selected PDF file.'
      produces:
        - application/pdf
      responses:
        200:
          description: 'Get a PDF file.'
          schema:
            type: file

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /widjaja_a/tutorial/1.0.0
schemes:
 - https
 
# Global definitions

securityDefinitions:
  BasicAuth:
    type: basic
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-API-Key
  OAuth2:
    type: oauth2
    flow: accessCode
    authorizationUrl: https://example.com/oauth/authorize
    tokenUrl: https://example.com/oauth/token
    scopes:
      read: 'Grants read access.'
      write: 'Grants write access.'
      admin: 'Grants read and write access to administrative information.'